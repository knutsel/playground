// Copyright 2015 Comcast Cable Communications Management, LLC

// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at

// http://www.apache.org/licenses/LICENSE-2.0

// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// This file was initially generated by gen_goto2.go (add link), as a start
// of the Traffic Ops golang data model

package api

import (
	_ "github.com/Comcast/traffic_control/traffic_ops/goto2/output_format" // needed for swagger
	null "gopkg.in/guregu/null.v3"
	"time"
)

type Server struct {
	Id             int64       `db:"id" json:"id"`
	HostName       string      `db:"host_name" json:"hostName"`
	DomainName     string      `db:"domain_name" json:"domainName"`
	TcpPort        null.Int    `db:"tcp_port" json:"tcpPort"`
	XmppId         null.String `db:"xmpp_id" json:"xmppId"`
	XmppPasswd     null.String `db:"xmpp_passwd" json:"xmppPasswd"`
	InterfaceName  string      `db:"interface_name" json:"interfaceName"`
	IpAddress      string      `db:"ip_address" json:"ipAddress"`
	IpNetmask      string      `db:"ip_netmask" json:"ipNetmask"`
	IpGateway      string      `db:"ip_gateway" json:"ipGateway"`
	Ip6Address     null.String `db:"ip6_address" json:"ip6Address"`
	Ip6Gateway     null.String `db:"ip6_gateway" json:"ip6Gateway"`
	InterfaceMtu   int64       `db:"interface_mtu" json:"interfaceMtu"`
	PhysLocation   int64       `db:"phys_location" json:"physLocation"`
	Rack           null.String `db:"rack" json:"rack"`
	Cachegroup     int64       `db:"cachegroup" json:"cachegroup"`
	Type           int64       `db:"type" json:"type"`
	Status         int64       `db:"status" json:"status"`
	UpdPending     int64       `db:"upd_pending" json:"updPending"`
	Profile        int64       `db:"profile" json:"profile"`
	CdnId          null.Int    `db:"cdn_id" json:"cdnId"`
	MgmtIpAddress  null.String `db:"mgmt_ip_address" json:"mgmtIpAddress"`
	MgmtIpNetmask  null.String `db:"mgmt_ip_netmask" json:"mgmtIpNetmask"`
	MgmtIpGateway  null.String `db:"mgmt_ip_gateway" json:"mgmtIpGateway"`
	IloIpAddress   null.String `db:"ilo_ip_address" json:"iloIpAddress"`
	IloIpNetmask   null.String `db:"ilo_ip_netmask" json:"iloIpNetmask"`
	IloIpGateway   null.String `db:"ilo_ip_gateway" json:"iloIpGateway"`
	IloUsername    null.String `db:"ilo_username" json:"iloUsername"`
	IloPassword    null.String `db:"ilo_password" json:"iloPassword"`
	RouterHostName null.String `db:"router_host_name" json:"routerHostName"`
	RouterPortName null.String `db:"router_port_name" json:"routerPortName"`
	LastUpdated    time.Time   `db:"last_updated" json:"lastUpdated"`
}

func handleServer(method string, id int, payload []byte) (interface{}, error) {
	if method == "GET" {
		return getServer(id)
	} else if method == "POST" {
		return postServer(payload)
	} else if method == "PUT" {
		return putServer(id, payload)
	} else if method == "DELETE" {
		return delServer(id)
	}
	return nil, nil
}

func getServer(id int) (interface{}, error) {
	if id >= 0 {
		return getServerById(id)
	} else {
		return getServers()
	}
}

// @Title getServerById
// @Description retrieves the server information for a certain id
// @Accept  application/json
// @Param   id              path    int     false        "The row id"
// @Success 200 {array}    Server
// @Resource /api/2.0
// @Router /api/2.0/server/{id} [get]
func getServerById(id int) (interface{}, error) {
	return genericGetById(id, "server", (*Server)(nil))
}

// @Title getServers
// @Description retrieves the server information for a certain id
// @Accept  application/json
// @Success 200 {array}    Server
// @Resource /api/2.0
// @Router /api/2.0/server [get]
func getServers() (interface{}, error) {
	return genericGet("server", (*Server)(nil))
}

// @Title postServer
// @Description enter a new server
// @Accept  application/json
// @Param             HostName json     string   false "host_name description"
// @Param           DomainName json     string   false "domain_name description"
// @Param              TcpPort json        int    true "tcp_port description"
// @Param               XmppId json     string    true "xmpp_id description"
// @Param           XmppPasswd json     string    true "xmpp_passwd description"
// @Param        InterfaceName json     string   false "interface_name description"
// @Param            IpAddress json     string   false "ip_address description"
// @Param            IpNetmask json     string   false "ip_netmask description"
// @Param            IpGateway json     string   false "ip_gateway description"
// @Param           Ip6Address json     string    true "ip6_address description"
// @Param           Ip6Gateway json     string    true "ip6_gateway description"
// @Param         InterfaceMtu json      int64   false "interface_mtu description"
// @Param         PhysLocation json      int64   false "phys_location description"
// @Param                 Rack json     string    true "rack description"
// @Param           Cachegroup json      int64   false "cachegroup description"
// @Param                 Type json      int64   false "type description"
// @Param               Status json      int64   false "status description"
// @Param           UpdPending json      int64   false "upd_pending description"
// @Param              Profile json      int64   false "profile description"
// @Param                CdnId json        int    true "cdn_id description"
// @Param        MgmtIpAddress json     string    true "mgmt_ip_address description"
// @Param        MgmtIpNetmask json     string    true "mgmt_ip_netmask description"
// @Param        MgmtIpGateway json     string    true "mgmt_ip_gateway description"
// @Param         IloIpAddress json     string    true "ilo_ip_address description"
// @Param         IloIpNetmask json     string    true "ilo_ip_netmask description"
// @Param         IloIpGateway json     string    true "ilo_ip_gateway description"
// @Param          IloUsername json     string    true "ilo_username description"
// @Param          IloPassword json     string    true "ilo_password description"
// @Param       RouterHostName json     string    true "router_host_name description"
// @Param       RouterPortName json     string    true "router_port_name description"
// @Success 200 {object}    output_format.ApiWrapper
// @Resource /api/2.0
// @Router /api/2.0/server [post]
func postServer(payload []byte) (interface{}, error) {
	return genericPost(payload, "server", (*Server)(nil))
}

// @Title putServer
// @Description modify an existing serverentry
// @Accept  application/json
// @Param             HostName json     string   false "host_name description"
// @Param           DomainName json     string   false "domain_name description"
// @Param              TcpPort json        int    true "tcp_port description"
// @Param               XmppId json     string    true "xmpp_id description"
// @Param           XmppPasswd json     string    true "xmpp_passwd description"
// @Param        InterfaceName json     string   false "interface_name description"
// @Param            IpAddress json     string   false "ip_address description"
// @Param            IpNetmask json     string   false "ip_netmask description"
// @Param            IpGateway json     string   false "ip_gateway description"
// @Param           Ip6Address json     string    true "ip6_address description"
// @Param           Ip6Gateway json     string    true "ip6_gateway description"
// @Param         InterfaceMtu json      int64   false "interface_mtu description"
// @Param         PhysLocation json      int64   false "phys_location description"
// @Param                 Rack json     string    true "rack description"
// @Param           Cachegroup json      int64   false "cachegroup description"
// @Param                 Type json      int64   false "type description"
// @Param               Status json      int64   false "status description"
// @Param           UpdPending json      int64   false "upd_pending description"
// @Param              Profile json      int64   false "profile description"
// @Param                CdnId json        int    true "cdn_id description"
// @Param        MgmtIpAddress json     string    true "mgmt_ip_address description"
// @Param        MgmtIpNetmask json     string    true "mgmt_ip_netmask description"
// @Param        MgmtIpGateway json     string    true "mgmt_ip_gateway description"
// @Param         IloIpAddress json     string    true "ilo_ip_address description"
// @Param         IloIpNetmask json     string    true "ilo_ip_netmask description"
// @Param         IloIpGateway json     string    true "ilo_ip_gateway description"
// @Param          IloUsername json     string    true "ilo_username description"
// @Param          IloPassword json     string    true "ilo_password description"
// @Param       RouterHostName json     string    true "router_host_name description"
// @Param       RouterPortName json     string    true "router_port_name description"
// @Success 200 {object}    output_format.ApiWrapper
// @Resource /api/2.0
// @Router /api/2.0/server [put]
func putServer(id int, payload []byte) (interface{}, error) {
	return genericPut(id, payload, "server", (*Server)(nil))
}

// @Title delServerById
// @Description deletes server information for a certain id
// @Accept  application/json
// @Param   id              path    int     false        "The row id"
// @Success 200 {array}    Server
// @Resource /api/2.0
// @Router /api/2.0/server/{id} [delete]
func delServer(id int) (interface{}, error) {
	return genericDelete(id, "server")
}
