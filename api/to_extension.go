// Copyright 2015 Comcast Cable Communications Management, LLC

// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at

// http://www.apache.org/licenses/LICENSE-2.0

// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// This file was initially generated by gen_goto2.go (add link), as a start
// of the Traffic Ops golang data model

package api

import (
	_ "github.com/Comcast/traffic_control/traffic_ops/goto2/output_format" // needed for swagger
	null "gopkg.in/guregu/null.v3"
	"time"
)

type ToExtension struct {
	Id                    int64       `db:"id" json:"id"`
	Name                  string      `db:"name" json:"name"`
	Version               string      `db:"version" json:"version"`
	InfoUrl               string      `db:"info_url" json:"infoUrl"`
	ScriptFile            string      `db:"script_file" json:"scriptFile"`
	Isactive              int64       `db:"isactive" json:"isactive"`
	AdditionalConfigJson  null.String `db:"additional_config_json" json:"additionalConfigJson"`
	Description           null.String `db:"description" json:"description"`
	ServercheckShortName  null.String `db:"servercheck_short_name" json:"servercheckShortName"`
	ServercheckColumnName null.String `db:"servercheck_column_name" json:"servercheckColumnName"`
	Type                  int64       `db:"type" json:"type"`
	LastUpdated           time.Time   `db:"last_updated" json:"lastUpdated"`
}

func handleToExtension(method string, id int, payload []byte) (interface{}, error) {
	if method == "GET" {
		return getToExtension(id)
	} else if method == "POST" {
		return postToExtension(payload)
	} else if method == "PUT" {
		return putToExtension(id, payload)
	} else if method == "DELETE" {
		return delToExtension(id)
	}
	return nil, nil
}

func getToExtension(id int) (interface{}, error) {
	if id >= 0 {
		return getToExtensionById(id)
	} else {
		return getToExtensions()
	}
}

// @Title getToExtensionById
// @Description retrieves the to_extension information for a certain id
// @Accept  application/json
// @Param   id              path    int     false        "The row id"
// @Success 200 {array}    ToExtension
// @Resource /api/2.0
// @Router /api/2.0/to_extension/{id} [get]
func getToExtensionById(id int) (interface{}, error) {
	return genericGetById(id, "to_extension", (*ToExtension)(nil))
}

// @Title getToExtensions
// @Description retrieves the to_extension information for a certain id
// @Accept  application/json
// @Success 200 {array}    ToExtension
// @Resource /api/2.0
// @Router /api/2.0/to_extension [get]
func getToExtensions() (interface{}, error) {
	return genericGet("to_extension", (*ToExtension)(nil))
}

// @Title postToExtension
// @Description enter a new to_extension
// @Accept  application/json
// @Param                 Name json     string   false "name description"
// @Param              Version json     string   false "version description"
// @Param              InfoUrl json     string   false "info_url description"
// @Param           ScriptFile json     string   false "script_file description"
// @Param             Isactive json      int64   false "isactive description"
// @Param AdditionalConfigJson json     string    true "additional_config_json description"
// @Param          Description json     string    true "description description"
// @Param ServercheckShortName json     string    true "servercheck_short_name description"
// @Param ServercheckColumnName json     string    true "servercheck_column_name description"
// @Param                 Type json      int64   false "type description"
// @Success 200 {object}    output_format.ApiWrapper
// @Resource /api/2.0
// @Router /api/2.0/to_extension [post]
func postToExtension(payload []byte) (interface{}, error) {
	return genericPost(payload, "to_extension", (*ToExtension)(nil))
}

// @Title putToExtension
// @Description modify an existing to_extensionentry
// @Accept  application/json
// @Param                 Name json     string   false "name description"
// @Param              Version json     string   false "version description"
// @Param              InfoUrl json     string   false "info_url description"
// @Param           ScriptFile json     string   false "script_file description"
// @Param             Isactive json      int64   false "isactive description"
// @Param AdditionalConfigJson json     string    true "additional_config_json description"
// @Param          Description json     string    true "description description"
// @Param ServercheckShortName json     string    true "servercheck_short_name description"
// @Param ServercheckColumnName json     string    true "servercheck_column_name description"
// @Param                 Type json      int64   false "type description"
// @Success 200 {object}    output_format.ApiWrapper
// @Resource /api/2.0
// @Router /api/2.0/to_extension [put]
func putToExtension(id int, payload []byte) (interface{}, error) {
	return genericPut(id, payload, "to_extension", (*ToExtension)(nil))
}

// @Title delToExtensionById
// @Description deletes to_extension information for a certain id
// @Accept  application/json
// @Param   id              path    int     false        "The row id"
// @Success 200 {array}    ToExtension
// @Resource /api/2.0
// @Router /api/2.0/to_extension/{id} [delete]
func delToExtension(id int) (interface{}, error) {
	return genericDelete(id, "to_extension")
}
